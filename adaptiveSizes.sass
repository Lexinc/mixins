//Адаптивные свойства
//Максимальная ширина экрана
$maxWidth: numberX
//Максимальная ширина контейнера
$maxWidthContainer: numberY

@mixin adaptiv-value($property, $startSize, $minSize, $type)
    $addSize: $startSize - $minSize
    @if $type==1 
        //Только, если меньше контейнера
        #{$property}: $startSize + px
        @media (max-width: #{$maxWidthContainer + px})
            #{property}: calc(#{$minSize + px} + #{$addSize} * ((100vh - 320px) / #{$maxWidthContainer - 320}))
    @else if $type==2
        //Только, если больше контейнера
        #{$property}: $startSize + px
        @media (min-width: #{$maxWidthContainer + px})
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}))
    @else 
        //Всегда
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}))

/*      
        Данный миксин используется в случае если нужно использовать динамические размеры шрифтов, отступов и ширин.

        Состоит он из 6 элементов. Два указываются отдельно от остальных. 

        Максимальная применимая ширина экрана($maxWidth), максимальный размер контейнера($maxWidthContainer).

        Остальные значения указываются при вызове миксина:

    ($property) - необходимое свойство(margin, padding, font-size etc.)

    ($startSize) - начальное или максимальное значение(указывать только числовое значение подразумевающее пиксели(50, 20 и тд.))

    ($minSize) - минимально допустимое значение. Будет отображатся при ширине экрана в 320px(указывать только числовое значение подразумевающее пиксели(50, 20 и тд.))

    ($type) - 1, 2, 3. 
        1 - если меньше контейнера.
        2 - если больше контейнера
        3 - всегда      
    */
    